local_costmap:

  # The costmap layers dictionary
  #plugins:
  #  - {name: obstacle_layer, type: "costmap_2d::ObstacleLayer"}
  #  - {name: inflation_layer, type: "costmap_2d::InflationLayer"}
    # - {name: range_layer,   type: "range_layer::RangeLayer"}

  # Obstacle layer configuration
  #obstacle_layer:
  #  observation_sources: laser_scan_sensor
  #  laser_scan_sensor: {sensor_frame: laser, data_type: LaserScan, topic: scan, marking: true, clearing: true, obstacle_range: 5.5, raytrace_range: 6.0, inf_is_valid: true}
    #observation_sources: scan
    #scan: {data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.0, max_obstacle_height: 3}
    
  # Range layer configuration
  #range_layer:
  #  topics: ["/left_range", "/center_range", "/right_range"]
  #  readings_timeout: 0.5
  #  tf_timeout: 0.1

  # Inflation layer
  #inflation_layer:
  #  inflation_radius: 0.12      # (geduino, 0.25)
  #  cost_scaling_factor: 10.0   # (geduino, 50)

  # The global frame for the costmap to operate in
  global_frame: odom
  
  # The name of the frame for the base link of the robot
  robot_base_frame: /base_footprint
  
  # The frequency in Hz for the map to be updated
  # (double, default: 5.0)
  update_frequency: 5.0           # (geduino, 1.0) (chefbot, 5.0) (turtlebot, 10.0)

  # The frequency in Hz for the map to be publish display information
  # (double, default: 0.0)
  publish_frequency: 5.0          # (geduino, 1.0) (chefbot, 2.0) (turtlebot, 10.0) 

  # Whether or not to use the static map to initialize the costmap. 
  # If the rolling_window parameter is set to true, this parameter must be set to false  
  static_map: false
  
  # Whether or not to use a rolling window version of the costmap. 
  # If the static_map parameter is set to true, this parameter must be set to false.
  rolling_window: true  
  
  # The width and height in meters and the resolution of the map in meters/cell of the map
  width: 3.0
  height: 3.0
  resolution: 0.05   